<?php

namespace Admin\Controller;

use \Core\AdminController;
use Model\XftModel;

class XftController extends AdminController
{


//	  加载登陆页面
    public function index()
    {
        $this->display('login.html');

    }

//		实现登陆
    public function doLogin()
    {
        $ObjModel = new \Model\XftModel;
//		    var_dump($ObjModel);
        $username = $_POST['username'];
        $password = $_POST['password'];
        $arr = $ObjModel->getUserInfoByName($username);
//        var_dump($arr);
        if (!$arr) {
            echo "<script>alert('您输入的用户名不存在');location.href ='index.php?p=Admin&c=xft&a=index'</script>";
        }

        if ($arr['passwd'] != md5($password)) {
            echo "<script>alert('用户名不存在');location.href ='index.php?p=Admin&c=xft&a=index';</script>";
        }
        if ($arr['user_state'] != 1) {
            echo "<script>alert('您不是管理员，无权限登陆');location.href ='index.php?p=Admin&c=xft&a=index';</script>";
        }

        $this->display(APP . PLAT . "/View/51CTO.html");

    }

    function get()
    {

        $ObjModel = new XftModel;
        $updateId = isset($_GET['id']) ? $_GET['id'] : 1;
//        echo $updateId;
        $arr2 = $ObjModel->showUpdate($updateId);
//        $data[]= ;

        echo json_encode($arr2);
    }

    function delete()
    {
        $ObjModel = new XftModel;
        $deleteId = isset($_GET['did']) ? $_GET['did'] : 1;
        $num = $ObjModel->delete($deleteId);
        echo $num;
    }

//        点击36克跳转页面
    public function doList()
    {
        $XftModel = new XftModel;
        $arr = $XftModel->getInfo();
//            var_dump($arr);
//		    查询rules表   查询出所有的父类分类
        $filmArr = $XftModel->getParent();
        $arr1 = $XftModel->showList();

//        循环显示list页面
        $this->assign("Arr", $arr1);
        $this->assign("dataArr", $arr);
        $this->assign("filmArr", $filmArr);
        $this->display(APP . PLAT . "/View/36kr.html");

    }


    public function Addto()
    {
        $type = $_POST['type'];
        $arr = [];
        if ($type == 0) {
            $data[':pid'] = 0;
            $data[':path'] = 0;
        } else {
            $arr = explode("#", $type);
//		        将pid存储进规则表
            $data[':pid'] = $arr[0];
//                拼接规则表的path
//                分类表的id拼接上规则表的pdi   组成path
            $data[':path'] = $arr[1] . "-" . $arr[0];

        }


//            拿到表单的值

//        $filmtype = $_POST['filmtype'];
        $urlName = $_POST['urlName'];
        $url = $_POST['url'];
        $start = $_POST['star'];
        $end = $_POST['end'];
        $content = $_POST['content'];
        $rulestype = $_POST['rulestype'];

        $data[':filmtype'] = $arr[0];
        $data[':urlName'] = $urlName;
        $data[':url'] = $url;
        $data[':start'] = $start;
        $data[':end'] = $end;
        $data[':content'] = $content;
        $data[':rulestype'] = $rulestype;
//        var_dump($data);

        $ObjModel = new XftModel;
        if ($ObjModel->insertInfo($data)) {
//            echo "<script>alert('插入成功'); location.href='index.php?p=admin&c=xft&a=doList'</script>";
            $this->successz();
        } else {
            $err = \Core\Dao::$error;
//            var_dump($err);
//            var_dump($data);
            $this->errorr();
        }
    }

//      显示所有的采集规则
//    public function showList()
//    {
//
//        $ObjModel = new XftModel;
//        $arr = $ObjModel->showList();
//        $this->assign("Arr", $arr);
//        $this->display(APP.PLAT."/VIEW/36kr.html");
//    }

//实现更新操作
    public function successz()
    {
        $this->display('edit.html');
    }

    public function errorr()
    {
        $this->display('error.html');
    }


//开始采集

    public function getDataByURL($url)
    {
        echo "<div id='txt' style=overflow:auto;'></div>";

        $curl = curl_init();
        $referer = "http://36kr.com/search/articles";
//        设置地址
//        $url ="http://36kr.com/search/articles/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD?page=1&ts=1524555115420";
        curl_setopt($curl, CURLOPT_URL, $url);
        //    CURLOPT_HEADER 设置为非0  会显示响应头信息
        curl_setopt($curl, CURLOPT_HEADER, 0);
        // 3) 服务器以文件流的方式返回，而不是直接输出
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        // 当浏览器重新定位的时候，自动设置 referer字符串
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1);
        // CURLOPT_REFERER 设置请求的 referer
        curl_setopt($curl, CURLOPT_REFERER, $referer);
        //模拟请求的浏览器的 User-Agent 头信息
        curl_setopt($curl, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0");
        //3、发送并且执行  $data 返回的就是 请求的url相应的内容
        $data = curl_exec($curl);

        //4、关闭curl资源
        curl_close($curl);
//        $data = iconv("gb2312", "utf-8//IGNORE", $data);
        return $data;


    }

    function output($str)
    {

        //通过dom操作 innerHTML把信息放到指定的div中
        echo "<script>var txt=document.getElementById('txt');txt.innerHTML= txt.innerHTML+'<br>" . $str . "';</script>";

        //输出缓冲区的内容
        ob_flush();
        flush();
    }

//开始采集

    function start()
    {
        if (!isset($_GET['mid'])) {
            $this->errorr();
        }
        var_dump($_GET);
        $mid = isset($_GET['mid']) ? $_GET['mid'] : 1;

//        根据id查询采集的规则
        $xfyModel = new XftModel;
        $rules = $xfyModel->Getone($mid);
        var_dump($rules);
//        var_dump($rules);
        if ($rules['type'] == 1) {
            //采集列表
            $this->getFilmURL($rules);

        } else if ($rules['type'] == 2) {
            $this->MatchContent();
        }
    }




    

//    循环采集
    public function getFilmURL($rules)
    {
        $url = $rules['rules_url'];

        $start = $rules['start_page'];
        $end = $rules['end_page'];
        $result = array();
        $result2 = array();
        $xftModel = new XftModel;
        $count = 0;
        for ($i = $start; $i < $end; $i++) {
//            将url替换成动态的
//            $patt3 = "http:\/\/36kr\.com\/search\/articles\/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD\?page=(.*)&ts=1524555115420";
//            $patt = "/<li><a href=\"(.*)\" target=\"_/Us";
            $url2 = preg_replace("/{.*}/Us", $i, $url);
            var_dump($url2);
//            var_dump($url);
//            var_dump($url2);
//            /<div href=\"(.*)\" target=\"_blank\" data-stat-click/Us
            $patt = $rules['content'];
//            返回html串子
            $str = $this->getDataByURL($url2);

            if ($str != "") {
//                echo "ccc";
                $num = preg_match_all($patt, $str, $result);
//                var_dump($result);

//                var_dump($result);
//                拿到日期
                $patt2 ="/<em><\/em><\/span><i class=\".*\"><\/i>(.*)<em>/Us";
                $num2 = preg_match_all($patt2, $str, $result2);
//                var_dump($result2);
//                var_dump($result2);
                if ($num&&$num2) {
//                    echo "aaa";
//                    var_dump($result[1]);
                    for ($j = 0; $j < count($result[1]); $j++) {
                        $data[':url'] = $result[1][$j];
                        $data[':hashurl'] = md5($result[1][$j]);
                        $data[':filmtypeid'] = $rules['type_id'];
                        $data[':biaoqian'] = "AI教程";
                        $data[":page"] = $i;
                        @$data[":addtime"] = $result2[1][$j];
                        $data[":is_down"] = 0;


                        if ($xftModel->url_exists($data[':hashurl'])) {
                            $this->output("url已经存在...跳过...");
                            continue;
                        }

                        //把url保存到数据库中
                        if ($xftModel->addInfo($data)) {
//                            echo 'zzz';
                            $count++;
                            $this->output("成功采集{$count}条,当前第{$i}页,采集正在继续...");
                        } else {
//                            echo "fff";
                            $error = \Core\Dao::$error;
                            var_dump($error);
                            $this->output("添加失败!{$error}");
                        }


                    }
                }
                $this->output("<hr>当前完成第{$i}页【{$url2}】，程序休息3秒，程序正在继续<hr>");
                sleep(3);

            } else {
                $this->output("<hr>第{$i}页内容获取失败,程序继续...</hr>");
            }
        }
    }













//    采集内容开始
//    function MatchContent()
//    {
//        if (!isset($_GET['muid'])) {
//            $this->errorr();
//        }
//        $count = 0;
//        $id = isset($_GET['muid']) ? $_GET['muid'] : 1;
////        var_dump($id);
////        根据id采集查询的内容
//        $xfyModel = new XftModel;
//        $rules = $xfyModel->getRulesContent($id);
////        var_dump($arr);
//        $pattArr = explode("||", $rules['content']);
////        var_dump($pattArr);
////            这里的意思是将规则表的typeid和url表的typeid对应的全部查出来
//        $arr = $xfyModel->findUrlByFilmtypeid($rules['type_id']);
//        var_dump($arr);
//
//        for ($i = 0; $i < count($arr); $i++) {
//            $result = null;
//            $contentUrl = $arr[$i]['url'] .".htm";
//
//            $str = $this->getDataByURL($contentUrl);
//
////                var_dump($str);
//            if ($str != "") {
////                根据正则取出内容
////               / \"wznr\/">.*<h2>(.*)<\/h2>/Us||/<em>(.*)<\/em><\/dt>/Us||/<div class=\"zwnr\">(.*)<dt><em>分享:<\/em>/Us||/ <dt><span>作者：(.*)<\/span><span>来源/Us||/target=\"_blank\"><img src=\"(.*)\" width=\"auto\" border=\"0\" height=\"auto\" alt=\"\" title=\"\" \/><\/a><\/p>/Us
//                for ($j = 0; $j < count($pattArr); $j++) {
//                    $num = preg_match_all($pattArr[$j],$str,$result);
//                    if($num) {
////                        存储进数组
//                            $data[$j] = $result[1];
//                    }else {
//                        $data[$j] ="";
//                    }
//                }
////
////                保存文章对应的id   在数组后面添加
//                $data[] = $rules['type_id'];
//                var_dump($data);
//                $xfyModel = new XftModel;
//                if($xfyModel->addContent($data)) {
//                    $count++;
//                    $this->output("当前【{$contentUrl}】已经下载，累计下载{$count}条");
//                    $id = $arr[$i]['id'];
//                    //2) 更新url对应的下载的状态为 1
//                    if($xfyModel->updateDownState($id)){
//                        $this->output("下载状态已经更新~");
//                    }
//
//                    $this->output("<hr>休息3秒钟，程序正在运行中...<hr>");
//                    sleep(3);
//                }else {
//                    $err = \Core\Dao::$error;
//                    var_dump($err);
//                    $this->output("添加失败:{$err}");
//                }
//                unset($data);
//            }else {
//                $this->errorr();
//            }
//        }
//    }


    function MatchContent(){

        if(!isset($_GET['muid'])){

            echo "<script>alert('参数错误无法继续采集');location.href='index.php?p=admin&c=xrc&a=doList'</script>";
        }
        $id = $_GET['muid'];
        $count = 0;

        $XftModel = new XftModel;
        $rules = $XftModel->findRowById($id);

        $pattArr = explode("||",$rules['content']);
        var_dump($pattArr);
        $urlArr = $XftModel -> findUrlByFilmtypeid($rules['type_id']);
//        var_dump($urlArr);
        // exit;
        //根据URL循环取出每一条URL对应的的详细信息
        for($i=0;$i<count($urlArr);$i++){

            $contentUrl = $urlArr[$i]['url'];

            $str = $this->getDataByURL($contentUrl);
//            var_dump($str);
            if($str!=""){
                for($j=0;$j<count($pattArr);$j++){
                    $num = preg_match($pattArr[$j],$str,$result);
                    if($num){
                        $data[$j] = $result[1];
                    }else {
                        $data[$j] = "";
                    }
                }
                //保存影片所属的类型id
                $data[] = $rules['type_id'];
                // $data[] = $urlArr[$i]['url'];

                // var_dump($data);
                // exit;

                //拼成数组，保存到数据库
                $data[] = $urlArr[$i]['biaoqian'];
                $data[] = "52AI";
                $XrcModel = new \Model\XftModel;
                var_dump($data);
                if($XrcModel->addInfo2($data)){

                    $count++;
                    $this->output("当前【{$contentUrl}】已经下载，累计下载{$count}条");

                    //1）获取url对应的id
                    $id = $urlArr[$i]['id'];
                    //2) 更新url对应的下载的状态为 1
                    if($XrcModel->updateDownState($id)){
                        $this->output("下载状态已经更新~");
                    }

                    $this->output("<hr>休息3秒钟，程序正在运行中...<hr>");
                    sleep(3);

                }else{

                    $err = \Core\Dao::$error;
                    var_dump($err);
                    $this->output("添加失败:{$err}");
                }

                //数组使用完毕，清空数组
                unset($data);
                //
                //如果保存成功，更新当前URL对应的下载状态为 1
            }else{

                $this->output("【{contentUrl}】内容获取失败...");
            }
        }
    }




///<h2 class=\"media-heading\"><a href=\"(.*)\" title=\"一份不可多得的深度学习技巧指南\" rel=\"bookmark\">/Us

    function test(){
            $str = "<div class=\"post-single\"> <h1 class=\"post-title text-center\">语音识别之语言模型技术</h1> <div class=\"post-time text-center\"><span class=\"hidden-xs\"><i class=\"iconfont icon-user\"></i><a href=\"http://www.52ai.com/author-3.html\" title=\"访问 机器大白 的专栏\" rel=\"author\">机器大白</a><em></em></span><i class=\"iconfont icon-time\"></i>2017-11-16 06:54:13<em></em><i class=\"iconfont icon-view\"></i>15490<em></em><i class=\"iconfont icon-comment\"></i><a href=\"#Comments\" target=\"_self\">0</a></div> <div class=\"post-summary hidden-xs\"><span class=\"text-danger\">摘要：</span>今年的INTERSPEECH于8月20日至24日在瑞典的斯德哥尔摩顺利召开，众多的高校研究机构和著名的公司纷纷在本次会议上介绍了各自最新的技术、系统和相关产品，而阿里巴巴集团作为钻...</div> <!--文章正文--> <div class=\"post-content\"> <div class=\"article-content\"> <p style=\"box-sizing: border-box; margin: 0cm 0cm 7.5pt; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">今年的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">INTERSPEECH</span><span style=\"box-sizing: border-box;\">于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">8</span><span style=\"box-sizing: border-box;\">月</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">20</span><span style=\"box-sizing: border-box;\">日至</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">24</span><span style=\"box-sizing: border-box;\">日在瑞典的斯德哥尔摩顺利召开，众多的高校研究机构和著名的公司纷纷在本次会议上介绍了各自最新的技术、系统和相关产品，而阿里巴巴集团作为钻石赞助商也派出了强大的阵容前往现场。从</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">10</span><span style=\"box-sizing: border-box;\">月</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">25</span><span style=\"box-sizing: border-box;\">日开始，<span style=\"box-sizing: border-box; font-weight: 700;\">阿里</span></span><span style=\"box-sizing: border-box; font-weight: 700;\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">iDST</span></span><span style=\"box-sizing: border-box; font-weight: 700;\">语音团队</span><span style=\"box-sizing: border-box;\">和云栖社区将共同打造一系列语音技术分享会，旨在为大家分享</span><span style=\"box-sizing: border-box; font-weight: 700;\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">INTERSPEECH2017</span></span><span style=\"box-sizing: border-box;\">会议上语音技术各个方面的进展。第二期分享的主题是<span style=\"box-sizing: border-box; font-weight: 700;\">语音识别之语言模型技术</span>（<em style=\"box-sizing: border-box; font-weight: inherit;\"><span style=\"box-sizing: border-box; font-weight: 700;\">视频回顾请戳这里</span></em>），以下是本次分享的主要内容。</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\"><br style=\"box-sizing: border-box;\"/>1&nbsp;</span><span style=\"box-sizing: border-box;\">语音识别技术</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">随着</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">iPHONE 4S</span><span style=\"box-sizing: border-box;\">中</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">siri</span><span style=\"box-sizing: border-box;\">的出现，越来越多的民用语音识别出现在大家眼前。现在市面上各种语音输入法、语音机器人层出不穷。下图是去年阿里云栖大会，基于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">iDST</span><span style=\"box-sizing: border-box;\">语音技术的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">ET</span><span style=\"box-sizing: border-box;\">机器人。现在市面上漫山遍野的智能音箱大战，其中也包含语音识别技术。</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\"><br style=\"box-sizing: border-box;\"/></span></p><div style=\"box-sizing: border-box; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background-color: rgb(255, 255, 255);\"><img alt=\"57e29159d1acf1924ccedd5c5fc81a3bde139728 语音识别之语言模型技术 AI教程 第1张\" title=\" 语音识别之语言模型技术 AI教程 第1张\" src=\"https://yqfile.alicdn.com/57e29159d1acf1924ccedd5c5fc81a3bde139728.jpeg\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/></div><p><span style=\"box-sizing: border-box; color: #333333; font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background-color: #FFFFFF;\">语音识别技术，通俗讲叫语音转文字，</span><span style=\"box-sizing: border-box; color: #333333; font-size: 16px; line-height: 32px; font-family: Arial, sans-serif; background-color: #FFFFFF;\">speech-to-text</span><span style=\"box-sizing: border-box; color: #333333; font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background-color: #FFFFFF;\">，是将观测得到的语音输入信号，转化成与之对应的文本序列的过程。传统语音识别系统如下图所示，包括特征提取、声学模型、语言模型和解码器四部分，通过特征提取将原始音频信号分帧加窗，转化成有利于机器进行识别得声学特征，经由声学模型获得该帧的声学模型得分，配合语言模型获得对应的语言模型得分，通过解码器在可能的文本空间中搜索，获得最可能的文本序列，作为结果输出。这里语言模型的作用是在路径搜索过程中辅助声学模型，判断文本路径的可能性。其中一个作用是同音消歧，即找到相同发音的目标文本序列。</span><span style=\"color: #333333; font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background-color: #FFFFFF;\"></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"87e55b6cac934a64d7f72fbc9f999c02dd878968 语音识别之语言模型技术 AI教程 第2张\" title=\" 语音识别之语言模型技术 AI教程 第2张\" src=\"https://yqfile.alicdn.com/87e55b6cac934a64d7f72fbc9f999c02dd878968.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">2&nbsp;</span><span style=\"box-sizing: border-box;\">语言模型</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">语言模型，顾名思义，对语言进行建模的模型。语言表达可以看作一串字符序列，不同的字符序列组合代表不同的含义，字符的单位可以是字或者词。语言模型的任务，可以看作是给定字符序列，如何估计该序列的概率，或者说，如何估计该序列的合理性。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">P(</span><span style=\"box-sizing: border-box;\">上海</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box;\">工人</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box; font-weight: 700;\">师傅</span><span style=\"box-sizing: border-box; font-weight: 700;\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span></span><span style=\"box-sizing: border-box;\">有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box;\">力量</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">)&gt;P(</span><span style=\"box-sizing: border-box;\">上海</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box;\">工人</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box; font-weight: 700;\">食腐</span><span style=\"box-sizing: border-box; font-weight: 700;\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span></span><span style=\"box-sizing: border-box;\">有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;</span><span style=\"box-sizing: border-box;\">力量</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">)</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">拿这句话做个例子。比如到底应该是“工人师傅有力量”，还是“工人食腐有力量”，哪句话更</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">“</span><span style=\"box-sizing: border-box;\">合适</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">。我们容易判断左边这句的概率大一点，工人师傅。于是我们希望通过语言模型的建模，可以给出符合人类预期的概率分配。就像这句，工人师傅的概率，大于工人食腐的概率。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"0f01a0d32ea1878e565f7ba67226e85243e8958b 语音识别之语言模型技术 AI教程 第3张\" title=\" 语音识别之语言模型技术 AI教程 第3张\" src=\"https://yqfile.alicdn.com/0f01a0d32ea1878e565f7ba67226e85243e8958b.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">根据条件概率的公式，我们很容易推出一句话的概率应该符合各个词条件概率的连乘，也就是链式法则。比如“上海的工人师傅有力量“，通过分词分成上海、的、工人、师傅、有、力量六个词，于是这句话（不考虑句首句尾）的概率就可以根据链式法则计算了，上海的概率，乘以”上海“后面跟”的“的概率，也就是上海条件下”的“的概率，再乘以”上海的“后面跟”工人“的概率，再乘以”上海的工人”后面出现“师傅“的概率，以此类推，一直到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">上海的工人师傅有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">，后面跟力量的概率。对于这种条件概率，也很容易通过朴素地计算词频的方式计算出来。然而我们发现，实际计算中，当句子比较长的时候，可能的组合数实在太多，实际操作中难以进行计算，于是人们就开始想着怎么简化问题，比如马尔可夫假设。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"59958116d46e5a125f59c4801441111d853ab66d 语音识别之语言模型技术 AI教程 第4张\" title=\" 语音识别之语言模型技术 AI教程 第4张\" src=\"https://yqfile.alicdn.com/59958116d46e5a125f59c4801441111d853ab66d.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">马尔可夫假设是，大致描述一下，给定时刻</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">t</span><span style=\"box-sizing: border-box;\">的状态的条件下，则时刻</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">t+1</span><span style=\"box-sizing: border-box;\">的状态与</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">t-1</span><span style=\"box-sizing: border-box;\">及之前时刻的状态条件独立。比如一阶情况，假设在给定</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-1)</span><span style=\"box-sizing: border-box;\">的情况下，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k</span><span style=\"box-sizing: border-box;\">）和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-2)</span><span style=\"box-sizing: border-box;\">及以前的状态（也就是词），条件独立。我们可以理解为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k)</span><span style=\"box-sizing: border-box;\">只与</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-1)</span><span style=\"box-sizing: border-box;\">相关，计算的时候不考虑</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-2)</span><span style=\"box-sizing: border-box;\">的影响，只与前面一个词有关，于是事情就变得简单了，以前计算</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">上海的工人师傅有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">这一大长串后面出现</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">力量</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">的概率，很麻烦，现在只需要计算</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">后面</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">力量</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">”</span><span style=\"box-sizing: border-box;\">的概率。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">对于高阶版本，也是一个道理，比如假设只与前面</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-1</span><span style=\"box-sizing: border-box;\">个词有关，于是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(1)</span><span style=\"box-sizing: border-box;\">到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-1)</span><span style=\"box-sizing: border-box;\">这一长串后面跟</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k)</span><span style=\"box-sizing: border-box;\">的概率转化成了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-N+1)W(k-N+2)</span><span style=\"box-sizing: border-box;\">到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-1)</span><span style=\"box-sizing: border-box;\">后面跟</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k)</span><span style=\"box-sizing: border-box;\">的概率，就只需要计算一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N</span><span style=\"box-sizing: border-box;\">元组</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-N+1)</span><span style=\"box-sizing: border-box;\">到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k)</span><span style=\"box-sizing: border-box;\">的词频，以及一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-1</span><span style=\"box-sizing: border-box;\">元组</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-N+1)</span><span style=\"box-sizing: border-box;\">一直到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">W(k-1)</span><span style=\"box-sizing: border-box;\">的词频，两者作比求得。这种通过马尔可夫假设简化计算、通过</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N</span><span style=\"box-sizing: border-box;\">元组词频计算得到条件概率的模型，叫做</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N</span><span style=\"box-sizing: border-box;\">元组模型，或者</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N</span><span style=\"box-sizing: border-box;\">元文法模型，英文</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-Gram Model</span><span style=\"box-sizing: border-box;\">。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"5c417dcbe7397d925df53947a693d9c6528725f8 语音识别之语言模型技术 AI教程 第5张\" title=\" 语音识别之语言模型技术 AI教程 第5张\" src=\"https://yqfile.alicdn.com/5c417dcbe7397d925df53947a693d9c6528725f8.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">总结一下</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N</span><span style=\"box-sizing: border-box;\">元文法模型：通过马尔可夫假设简化了模型结构和计算，通过数数的方式计算，通过查找的方式使用。它计算简单（数数），计算速度快（查表）。有超过三十年的历史，性能稳定可靠，经得起检验。但限于词频计数的计算，它比较稀疏，依赖平滑算法，但对于没见过的组合（</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">unseen data</span><span style=\"box-sizing: border-box;\">）它的泛化能力还是不太好；而且限于马尔可夫假设，其可用的历史信息有限，只与前</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-1</span><span style=\"box-sizing: border-box;\">个词有关，再长就影响不到了。前段时间深度学习火了几年，于是大家都在想能不能用神经网络做点什么，于是人们开始尝试用神经网络替代</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N</span><span style=\"box-sizing: border-box;\">元文法模型。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">首先是全连接神经网络，最早经得起检验的模型。内部实值节点，连续空间建模，于是比数数流拥有了更好的泛化性，训练得到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Projection</span><span style=\"box-sizing: border-box;\">层作为词向量，也被发现具有不错的语义相关性。但</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">FCNN, fully-connected NN</span><span style=\"box-sizing: border-box;\">全连接神经网络，结构并没有比</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">ngram</span><span style=\"box-sizing: border-box;\">模型用更长的历史信息，依然跟前面</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-1</span><span style=\"box-sizing: border-box;\">个词相关。于是大家就开始用理论历史信息无限长的递归结构的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">RNN</span><span style=\"box-sizing: border-box;\">，递归神经网络，来对语言进行建模。理论上无穷长的历史信息，实际上人们通过</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">long short-term memory</span><span style=\"box-sizing: border-box;\">或者</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">GRU</span><span style=\"box-sizing: border-box;\">这种改进结构来弥补梯度衰减的问题，于是获得了还挺明显的提升。实际应用的时候有以下几个问题吧，节点数多，除了占空间，就是训练和测试的计算量都很大，然后对训练数据也比较敏感。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"82e06c8e9ac6e81ca3c391d429d084905753f6a3 语音识别之语言模型技术 AI教程 第6张\" title=\" 语音识别之语言模型技术 AI教程 第6张\" src=\"https://yqfile.alicdn.com/82e06c8e9ac6e81ca3c391d429d084905753f6a3.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">词表的大小是影响模型的关键因素，比如一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">100w</span><span style=\"box-sizing: border-box;\">词的词表，对应</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">100w</span><span style=\"box-sizing: border-box;\">的输入</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">/</span><span style=\"box-sizing: border-box;\">输出节点，如果</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">recurrent</span><span style=\"box-sizing: border-box;\">层有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1000</span><span style=\"box-sizing: border-box;\">个节点，那光输出层的权重就有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">10</span><span style=\"box-sizing: border-box;\">的九次方量级，算起来可是个大工程，于是压缩词典尺寸成了一个最直接的解决方案，很多时候压缩词典尺寸会造成性能损失，其实真正制约速度性能的主要是输出层节点，所以一个折中的解决方案就是仅压缩输出层词表，输入选用一个大点的词表。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"80f4ff4960773bcaefe4857056fd8b3c04b2839d 语音识别之语言模型技术 AI教程 第7张\" title=\" 语音识别之语言模型技术 AI教程 第7张\" src=\"https://yqfile.alicdn.com/80f4ff4960773bcaefe4857056fd8b3c04b2839d.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">除了直接压缩词表，也可以对词表进行聚类，比如</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">100w</span><span style=\"box-sizing: border-box;\">词表聚成</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1000</span><span style=\"box-sizing: border-box;\">个类，每个类别</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1000</span><span style=\"box-sizing: border-box;\">个词，于是就把</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">100w</span><span style=\"box-sizing: border-box;\">的输出变成了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">2000</span><span style=\"box-sizing: border-box;\">的两个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">softmax</span><span style=\"box-sizing: border-box;\">，大幅提升了速度；第三种方法是瓶颈层，就是输出或输入增加瓶颈层来削减节点数量，但输出</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">softmax</span><span style=\"box-sizing: border-box;\">的计算量不减，而且节点数过少对性能还是有很大影响的，分层输出</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Hierarchical Softmax</span><span style=\"box-sizing: border-box;\">是个树状结构，通过对输出层类别进行树状结构的聚类（或者叫编码），这样只有标签节点对应的路径需要计算，但</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CPU</span><span style=\"box-sizing: border-box;\">上实现还好，这种结构在树节点串行运算，不太适合</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">GPU</span><span style=\"box-sizing: border-box;\">这种低主频高并发的计算架构，而且同数据量情况下性能衰减还是挺严重的。前段时间刚刚出来的文章，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LightRNN</span><span style=\"box-sizing: border-box;\">，通过类似聚类的方式，利用</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">的思想，把词表映射到一个实值矩阵上，实际输出只需要矩阵的行加矩阵的列，计算量大概也能开个方。和节点数多一起造成计算量大的一个原因就是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">softmax</span><span style=\"box-sizing: border-box;\">输出，需要计算所有的节点求个和，然后得到分母。若是这个分母能保持一个常数，实际计算的时候就只算需要的节点，在测试环节就快的多了。于是就有了正则项相关的方法，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">variance regularization</span><span style=\"box-sizing: border-box;\">，如果训练速度可以接受的话，这种方法在基本不损失模型正确性的情况下可以大幅提升前向计算速度；如果训练的时候也想提速，还可以考虑基于采样，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">sampling</span><span style=\"box-sizing: border-box;\">，的方法，比如</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NCE</span><span style=\"box-sizing: border-box;\">、</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">IS importance sampling</span><span style=\"box-sizing: border-box;\">、</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">black sampling</span><span style=\"box-sizing: border-box;\">等，本质上就是说，在训练的时候不计算全部节点，只计算正样本（也就是标签为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1</span><span style=\"box-sizing: border-box;\">的节点），以及部分通过某种分布采样的到的负样本，避免高输出造成的计算缓慢。速度上提升还是很明显的。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">3&nbsp;</span><span style=\"box-sizing: border-box;\">评价指标</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">语言模型一般通过混淆度，英文</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Perplexity</span><span style=\"box-sizing: border-box;\">，简称</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PPL</span><span style=\"box-sizing: border-box;\">或者</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PP</span><span style=\"box-sizing: border-box;\">值，来评价语言模型性能。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">首先我们知道熵，可以表达一组分布的最短平均编码长度，比如一个标签的值符合一组分布</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">p1 p2 pn</span><span style=\"box-sizing: border-box;\">，出现第</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">i</span><span style=\"box-sizing: border-box;\">个值得概率是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">pi</span><span style=\"box-sizing: border-box;\">，那如果我们对第</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">i</span><span style=\"box-sizing: border-box;\">个值按负的以二为底</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">pi</span><span style=\"box-sizing: border-box;\">的对数个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">bit</span><span style=\"box-sizing: border-box;\">进行编码，则可以得到最短平均编码长度。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"774f70fa30d20132e259b5d5ada6ae34f1abd272 语音识别之语言模型技术 AI教程 第8张\" title=\" 语音识别之语言模型技术 AI教程 第8张\" src=\"https://yqfile.alicdn.com/774f70fa30d20132e259b5d5ada6ae34f1abd272.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">现在有一篇文档，或者说我们的测试集，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">S</span><span style=\"box-sizing: border-box;\">，每一句是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Sj</span><span style=\"box-sizing: border-box;\">，我们可以根据模型算得其总概率为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">P</span><span style=\"box-sizing: border-box;\">（向量</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">S</span><span style=\"box-sizing: border-box;\">），于是要达到理论最优，其编码位数应该是负的以</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">2</span><span style=\"box-sizing: border-box;\">为底</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">P</span><span style=\"box-sizing: border-box;\">（</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">S</span><span style=\"box-sizing: border-box;\">）的对数，我们除以总词数</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Nw</span><span style=\"box-sizing: border-box;\">，得到文档的平均最短编码长度。为了计算简便，以此二的平均编码位数次方，作为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PPL</span><span style=\"box-sizing: border-box;\">，展开之后就是最下面的公式，每个词概率连乘后，开</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Nw</span><span style=\"box-sizing: border-box;\">次方。一般几十几百不等，偶尔上千吧，对应平均编码位数在</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">6</span><span style=\"box-sizing: border-box;\">到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">10</span><span style=\"box-sizing: border-box;\">这一块。编码位数越少，对应匹配度越高，也就是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PPL</span><span style=\"box-sizing: border-box;\">越小，我们认为模型越好</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"1fb72d07af4e62becd4ce854485ef018f4207f7e 语音识别之语言模型技术 AI教程 第9张\" title=\" 语音识别之语言模型技术 AI教程 第9张\" src=\"https://yqfile.alicdn.com/1fb72d07af4e62becd4ce854485ef018f4207f7e.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">因为是语音识别中的一部分，为语音识别服务，所以最终的评价指标，往往是语音识别常用的评价体系，叫做符号错误率。错误包含三种，插入错误，删除错误，替换错误。通过找到最小化三种错误的一组匹配，来计算实际的错误率，是三种错误总数，除以总符号数。例如上面这个例子，上海的工人师傅有力量，被识别成了上海工人食腐有的是力量，这里左边的红字“的”，属于删除错误；“师傅”被错误识别成“食腐“，属于替换错误；多出来的右边的”的”、“是”，属于插入错误。错误一共有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">2+1+2</span><span style=\"box-sizing: border-box;\">共</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">5</span><span style=\"box-sizing: border-box;\">处，原句</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">10</span><span style=\"box-sizing: border-box;\">个字，所以错误率是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">50%&nbsp;</span><span style=\"box-sizing: border-box;\">。对于中文，我们一般使用字错误率，对于英文，我们一般使用词错误率。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">4&nbsp;</span><span style=\"box-sizing: border-box;\">会议前沿</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">接下来是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Interspeech2017</span><span style=\"box-sizing: border-box;\">会议的，语音识别中语言模型的研究进展。分为以下四个方面，模型优化相关的、数据和其它信息自适应相关的、解码过程相关的，以及分析类的文章。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"d418331114afb883b2ce3edceb283d1062d1703c 语音识别之语言模型技术 AI教程 第10张\" title=\" 语音识别之语言模型技术 AI教程 第10张\" src=\"https://yqfile.alicdn.com/d418331114afb883b2ce3edceb283d1062d1703c.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">首先是模型优化相关的，直接从模型入手，包含以上这几篇文章，比如使用更新的模型结构，残差网络、更大广度的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">、双向</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">RNN</span><span style=\"box-sizing: border-box;\">等；或者更好的训练方式，比如基于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Batch</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NCE</span><span style=\"box-sizing: border-box;\">训练、谷歌的稀疏非负矩阵语言模型</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">SNM LM</span><span style=\"box-sizing: border-box;\">参数估计等。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"0a2daa5421c464a3a71aba21e374a8724c008fbb 语音识别之语言模型技术 AI教程 第11张\" title=\" 语音识别之语言模型技术 AI教程 第11张\" src=\"https://yqfile.alicdn.com/0a2daa5421c464a3a71aba21e374a8724c008fbb.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">然后是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">adaptation</span><span style=\"box-sizing: border-box;\">，也就是自适应相关的文章。实际业务中我们也会碰倒类似问题，比如我们用大量数据训练了一个通用模型，这是有业务需求说，我们需要做某一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">domain</span><span style=\"box-sizing: border-box;\">的识别，可不可以帮我们优化一下，这个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">domain</span><span style=\"box-sizing: border-box;\">的数据不是很多。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">这种时候就需要自适应相关的方法了，将通用的大模型，通过少量数据，或者其它信息（比如这里有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">knowledge graph</span><span style=\"box-sizing: border-box;\">的），自适应到某一特定领域。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"a745955ba9b846d65fc10079fa16535150e69f90 语音识别之语言模型技术 AI教程 第12张\" title=\" 语音识别之语言模型技术 AI教程 第12张\" src=\"https://yqfile.alicdn.com/a745955ba9b846d65fc10079fa16535150e69f90.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">第三部分是解码部分。如何将各种花样地语言模型用于语音识别。比如传说中的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NNLM</span><span style=\"box-sizing: border-box;\">，基于神经网络的语言模型，刚刚说的全连接</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NN</span><span style=\"box-sizing: border-box;\">或者</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">RNN</span><span style=\"box-sizing: border-box;\">结构的语言模型，其计算量是远大于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-Gram</span><span style=\"box-sizing: border-box;\">这种可以查表操作的模型的。语音识别的解码工作是一个很复杂的搜索，有很大的计算量和很高的实时性要求，如果每一次查表操作都替换成一次神经网络输出的计算，不好好优化一下可能会非常慢。这里就有一些语言模型解码这块的优化工作，包含以上三篇文章。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"268de7eaabbc571e1161fd97143f87342685823e 语音识别之语言模型技术 AI教程 第13张\" title=\" 语音识别之语言模型技术 AI教程 第13张\" src=\"https://yqfile.alicdn.com/268de7eaabbc571e1161fd97143f87342685823e.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">最后是一篇分析类的文章，分析现在的语言模型技术，和人类之间的差距。文中估计的人类对于一般文本的理解，对应的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PPL</span><span style=\"box-sizing: border-box;\">在</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">14</span><span style=\"box-sizing: border-box;\">左右，与目前语言模型技术有较大差距，预测至少需要</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">10-20</span><span style=\"box-sizing: border-box;\">甚至更多年，机器才能在语言模型领域达到人类的认知。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">总览完这些，我们就挑两篇文章一起看一下吧。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">第一篇，题目是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Empirical Exploration of Novel Architectures and Objectives for Language Models</span><span style=\"box-sizing: border-box;\">，对比了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM-RNN</span><span style=\"box-sizing: border-box;\">和文章提出的一种广度更大的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">，在单任务传统交叉熵（也就是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CE</span><span style=\"box-sizing: border-box;\">）准则下和多任务学习（</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">multitask learning</span><span style=\"box-sizing: border-box;\">）下的性能对比。文章的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">contribution</span><span style=\"box-sizing: border-box;\">有两点，尝试了一个更大广度的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">，一个是用了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">multitask learning</span><span style=\"box-sizing: border-box;\">。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"50ec87994d79519ab622e8b23adc30fefd81225b 语音识别之语言模型技术 AI教程 第14张\" title=\" 语音识别之语言模型技术 AI教程 第14张\" src=\"https://yqfile.alicdn.com/50ec87994d79519ab622e8b23adc30fefd81225b.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM-RNN</span><span style=\"box-sizing: border-box;\">的两个基线系统，包括</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word-level</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">character-level</span><span style=\"box-sizing: border-box;\">两个建模尺度。模型比较基本，对于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word-level</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">上面两层</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM</span><span style=\"box-sizing: border-box;\">，对于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">character-level</span><span style=\"box-sizing: border-box;\">，尺度更细，于是加了一层</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM</span><span style=\"box-sizing: border-box;\">以更好地刻画。输出都是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word</span><span style=\"box-sizing: border-box;\">。两种尺度和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM-RNN</span><span style=\"box-sizing: border-box;\">的建模之前的工作中都有，所以只算是基线系统，这里没有创新。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"63ae99d97e4345fd83e7f993005762edbf931ae8 语音识别之语言模型技术 AI教程 第15张\" title=\" 语音识别之语言模型技术 AI教程 第15张\" src=\"https://yqfile.alicdn.com/63ae99d97e4345fd83e7f993005762edbf931ae8.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">这里是作者</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">propose</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word-level&nbsp;</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">DCC</span><span style=\"box-sizing: border-box;\">。这里为了增加对更长时的信息进行建模，使用了一个更大时间尺度的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">，这里为了建模的效果，它没有采取一整个大卷积窗，而是分层合并的方式，比如左边这个例子，不是传统的对</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">wanted to be able</span><span style=\"box-sizing: border-box;\">这四个单词一次卷积，而是分为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">wanted to</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">be able</span><span style=\"box-sizing: border-box;\">两个组，分别卷积，然后再卷一层的方式。右边做了一点小改进，就是又增加了一级</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1x2</span><span style=\"box-sizing: border-box;\">的卷积，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word-DCC</span><span style=\"box-sizing: border-box;\">加一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">additional</span><span style=\"box-sizing: border-box;\">的卷积层。传统</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">在英文上往往采用</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">character-level</span><span style=\"box-sizing: border-box;\">的建模，以发挥</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">的优势，对较细的尺度进行建模，同时利用窗长和多层卷积的优势，在保证计算效率的前提下，提高时间尺度的长度；这里更加侧重时间尺度的长度，而不是更细的粒度。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"b55e521f257b7ac0faba8595cdd2566b9ee938d1 语音识别之语言模型技术 AI教程 第16张\" title=\" 语音识别之语言模型技术 AI教程 第16张\" src=\"https://yqfile.alicdn.com/b55e521f257b7ac0faba8595cdd2566b9ee938d1.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">第二个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">contribution</span><span style=\"box-sizing: border-box;\">是用了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">multi-task learning</span><span style=\"box-sizing: border-box;\">。很经典的训练策略，通过加入额外的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">secondary task</span><span style=\"box-sizing: border-box;\">，来提升</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">primary task</span><span style=\"box-sizing: border-box;\">（也就是主</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">task</span><span style=\"box-sizing: border-box;\">）的性能。当然很多时候两个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">task</span><span style=\"box-sizing: border-box;\">互相帮助。合并的优化目标按照左边这个公式，两个交叉熵准则按权相加，按照两个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">task</span><span style=\"box-sizing: border-box;\">的相关性选择一个合适的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">lamda</span><span style=\"box-sizing: border-box;\">参数。新的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">task</span><span style=\"box-sizing: border-box;\">意味着额外的信息量，同时也是一种正则，对于抑制过拟合有帮助。对于数据有限的任务，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">multi-task learning</span><span style=\"box-sizing: border-box;\">尤为有效。这里采用了单词的类别分类作为一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">task</span><span style=\"box-sizing: border-box;\">，类别是灰度聚类的到的，先聚类，再把聚类结果用于分类。没有直接增加人为设计的准则，自己对自己提升，也可以看成一种</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">boost</span><span style=\"box-sizing: border-box;\">。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">实验在三个数据集展开，分别是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Broadcast News</span><span style=\"box-sizing: border-box;\">、</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">switchboard</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">callhome</span><span style=\"box-sizing: border-box;\">三个语音识别的常用</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">8k</span><span style=\"box-sizing: border-box;\">采样英文数据集。其中</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">swtichboard</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">callhome</span><span style=\"box-sizing: border-box;\">都是电话对话，放在后面说，我们先来看</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">broadcast news</span><span style=\"box-sizing: border-box;\">。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"18501f251fa8b0b831e2480afbd0fd1376758d51 语音识别之语言模型技术 AI教程 第17张\" title=\" 语音识别之语言模型技术 AI教程 第17张\" src=\"https://yqfile.alicdn.com/18501f251fa8b0b831e2480afbd0fd1376758d51.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">上表是混淆度</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PPL</span><span style=\"box-sizing: border-box;\">，下表两种不同</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">AM</span><span style=\"box-sizing: border-box;\">情况下的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">WER</span><span style=\"box-sizing: border-box;\">。左边表中</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word-level LSTM RNN</span><span style=\"box-sizing: border-box;\">明显好过其它模型，其中</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Multitask learning</span><span style=\"box-sizing: border-box;\">训练的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM-RNN</span><span style=\"box-sizing: border-box;\">获得最低的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PPL96.47</span><span style=\"box-sizing: border-box;\">；其次是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">character-level</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM</span><span style=\"box-sizing: border-box;\">，最后是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">，其中多一个卷积层的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Word-DCC+C</span><span style=\"box-sizing: border-box;\">，就是最下面两个结果，比没有这个卷积层还是有点用的。</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Multitask learning</span><span style=\"box-sizing: border-box;\">在这个量级的数据下面还是有一定帮助的，或多或少都看到一点提升。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"91d8313e02b42661d410398724985596141740d5 语音识别之语言模型技术 AI教程 第18张\" title=\" 语音识别之语言模型技术 AI教程 第18张\" src=\"https://yqfile.alicdn.com/91d8313e02b42661d410398724985596141740d5.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">这个结果也是比较符合预期，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM-RNN</span><span style=\"box-sizing: border-box;\">作为经典的模型，在大多数情况还是非常优异的，只是因为其</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">recurrent</span><span style=\"box-sizing: border-box;\">结构，它的训练速度相比</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">还是慢了一些。上面的表格是语音识别的词错误率结果，使用了两种声学模型，一种是差一些的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">GMM</span><span style=\"box-sizing: border-box;\">模型，一种是比较好的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">声学模型。结果一样符合预期，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word-level</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM-RNN + multitask learning</span><span style=\"box-sizing: border-box;\">训练获得单模型最优，与</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">及</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">character-level LSTM</span><span style=\"box-sizing: border-box;\">合并后又小幅提升了一点。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"eeebe5803c09512a97b39dbd3c778f63ae1fbb77 语音识别之语言模型技术 AI教程 第19张\" title=\" 语音识别之语言模型技术 AI教程 第19张\" src=\"https://yqfile.alicdn.com/eeebe5803c09512a97b39dbd3c778f63ae1fbb77.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">第二个实验在两个电话对话数据库上进行，就是刚刚提到的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">switchboard SWB</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;callhome CH</span><span style=\"box-sizing: border-box;\">。相比上一个实验测试不同的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">AM</span><span style=\"box-sizing: border-box;\">，这个实验加强了基础</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LM</span><span style=\"box-sizing: border-box;\">，使用了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-Gram</span><span style=\"box-sizing: border-box;\">模型</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">+</span><span style=\"box-sizing: border-box;\">一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">modelM</span><span style=\"box-sizing: border-box;\">，一个准神经网络模型，这里不详述了。对于这种更强的基线</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LM</span><span style=\"box-sizing: border-box;\">，几个模型的相对提升下降了一些，但总体趋势与之前一致，还是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">word-level LSTM-RNN + multitask learning</span><span style=\"box-sizing: border-box;\">效果最好。右边的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">WER</span><span style=\"box-sizing: border-box;\">在两个测试集上进行，趋势基本一致，三个模型融合相比最优的单个模型又小幅提升了一点。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"b7091ba16ae825695a5b00e9460d50ed7dd01921 语音识别之语言模型技术 AI教程 第20张\" title=\" 语音识别之语言模型技术 AI教程 第20张\" src=\"https://yqfile.alicdn.com/b7091ba16ae825695a5b00e9460d50ed7dd01921.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">这里个人觉得本文的这种</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">应该尝试</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">character-level</span><span style=\"box-sizing: border-box;\">的建模，发挥</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CNN</span><span style=\"box-sizing: border-box;\">的优势，和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">LSTM</span><span style=\"box-sizing: border-box;\">长时信息形成互补。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">刚刚是一篇模型结构、训练准则的探究，实际应用中，之前说过，基于神经网络的语言模型比基于查表的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-Gram</span><span style=\"box-sizing: border-box;\">模型计算量大了很多，在实际系统中很难实时运算，往往采用重打分的模式做</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">rerank</span><span style=\"box-sizing: border-box;\">。这里有一篇工程性强一些的文章，针对几个影响速度的点，结合了几种优化方式，做到了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NNLM</span><span style=\"box-sizing: border-box;\">的准实时</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">one-pass</span><span style=\"box-sizing: border-box;\">解码。特色在于用</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">N-Gram</span><span style=\"box-sizing: border-box;\">模型查表的计算量，做到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NNLM</span><span style=\"box-sizing: border-box;\">的计算。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Contribution</span><span style=\"box-sizing: border-box;\">包含以下几点，加速</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">100</span><span style=\"box-sizing: border-box;\">倍以上，做到准实时计算；</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">其中使用了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NCE</span><span style=\"box-sizing: border-box;\">训练的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">unnormalized NNLM</span><span style=\"box-sizing: border-box;\">解决输出问题；</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">通过预计算存储和缓存解决隐层节点输出；</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">通过</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PReLU</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Maxout</span><span style=\"box-sizing: border-box;\">激活函数替代</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">tanh</span><span style=\"box-sizing: border-box;\">。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">几个技术都不是新技术，但本文把它们用到一起，达到了比较好的效果。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">模型结构如下图所示，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1</span><span style=\"box-sizing: border-box;\">个词的输入，每个输入按</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1-hot</span><span style=\"box-sizing: border-box;\">编码，通过</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">shared weights</span><span style=\"box-sizing: border-box;\">映射到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E</span><span style=\"box-sizing: border-box;\">维的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">。</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1</span><span style=\"box-sizing: border-box;\">个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E</span><span style=\"box-sizing: border-box;\">维的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">拼在一起作为隐层输入，经过隐层线性映射到维度</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">，这里的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">affine</span><span style=\"box-sizing: border-box;\">映射耗时</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">(n-1)*E*H</span><span style=\"box-sizing: border-box;\">；隐层节点通过双曲正切函数</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">tanh</span><span style=\"box-sizing: border-box;\">的映射，耗时</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">T_n</span><span style=\"box-sizing: border-box;\">，也就是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Tanh</span><span style=\"box-sizing: border-box;\">的计算时间；输出层共计</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V</span><span style=\"box-sizing: border-box;\">个节点，也就是输出词典的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">size</span><span style=\"box-sizing: border-box;\">是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V</span><span style=\"box-sizing: border-box;\">，包括一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H*V</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">affine projection</span><span style=\"box-sizing: border-box;\">和一个节点数为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">softmax</span><span style=\"box-sizing: border-box;\">计算。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"8d09b9d2660af50abce4a552454ab963004ed773 语音识别之语言模型技术 AI教程 第21张\" title=\" 语音识别之语言模型技术 AI教程 第21张\" src=\"https://yqfile.alicdn.com/8d09b9d2660af50abce4a552454ab963004ed773.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">下面我们看看这篇文章是怎么一点一点压缩计算量的。首先是对于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">hidden layer</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">affine projection</span><span style=\"box-sizing: border-box;\">计算，一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">(n-1)*E</span><span style=\"box-sizing: border-box;\">维映射到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">维的矩阵乘法。这个输入特征</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">(n-1)*E</span><span style=\"box-sizing: border-box;\">维，可以看作</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1</span><span style=\"box-sizing: border-box;\">个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E</span><span style=\"box-sizing: border-box;\">维的子矩阵，每个矩阵分别有一个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E-&gt;H</span><span style=\"box-sizing: border-box;\">的映射，届时再把这</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1</span><span style=\"box-sizing: border-box;\">个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">维的向量加在一起，就是整个过程了。而这个过程中，词表是有限的，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E</span><span style=\"box-sizing: border-box;\">维向量就是有限的，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1</span><span style=\"box-sizing: border-box;\">个位置的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E-&gt;H</span><span style=\"box-sizing: border-box;\">的映射也就是有限的，我们本来要存</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V</span><span style=\"box-sizing: border-box;\">个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E</span><span style=\"box-sizing: border-box;\">维的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V</span><span style=\"box-sizing: border-box;\">是词表</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">size</span><span style=\"box-sizing: border-box;\">，这里可以认为需要存储</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V</span><span style=\"box-sizing: border-box;\">个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">(n-1)*H</span><span style=\"box-sizing: border-box;\">维</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">就可以免去刚刚说的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E-&gt;H</span><span style=\"box-sizing: border-box;\">的映射了，于是隐层</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">affine</span><span style=\"box-sizing: border-box;\">计算的时间就从</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1</span><span style=\"box-sizing: border-box;\">乘以</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E</span><span style=\"box-sizing: border-box;\">乘以</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">，降低到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">(n-1)*H</span><span style=\"box-sizing: border-box;\">次加法运算</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">当然，存储成本从</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V*E</span><span style=\"box-sizing: border-box;\">，变到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V * n-1 * H</span><span style=\"box-sizing: border-box;\">，增加了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1 * H / E</span><span style=\"box-sizing: border-box;\">倍。比如</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1024</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">E</span><span style=\"box-sizing: border-box;\">是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">128</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n</span><span style=\"box-sizing: border-box;\">是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">5</span><span style=\"box-sizing: border-box;\">，则增加了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">4*8=32</span><span style=\"box-sizing: border-box;\">倍。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">解决完</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">affine transform</span><span style=\"box-sizing: border-box;\">，第二步就是激活函数。我们知道双曲正切函数，就是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">tanh</span><span style=\"box-sizing: border-box;\">函数，泰勒需要展开到好多阶，单</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">CPU</span><span style=\"box-sizing: border-box;\">计算代价还是比较大的。文章中替换成了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">PReLU</span><span style=\"box-sizing: border-box;\">（</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Parametric ReLU</span><span style=\"box-sizing: border-box;\">），一个参数可学习的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">ReLU</span><span style=\"box-sizing: border-box;\">函数，以及尝试了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">maxout</span><span style=\"box-sizing: border-box;\">。两个激活函数计算量都是比较低的，这样激活函数的时间</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Tn</span><span style=\"box-sizing: border-box;\">也就压缩到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">kTmax(H)</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">k</span><span style=\"box-sizing: border-box;\">个</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">维向量取</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">max</span><span style=\"box-sizing: border-box;\">的时间。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">第三步是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">cache</span><span style=\"box-sizing: border-box;\">策略，对于一组</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">n-1</span><span style=\"box-sizing: border-box;\">个词的词序列</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">&nbsp;w1 w2 w(n-1)</span><span style=\"box-sizing: border-box;\">，当我们计算过它的值之后，可以把输入的词序列和输出的概率都存下来放到缓存中，当计算的时候就可以直接拿出来用，避免复杂的计算。这也是常见的工程技巧，假设命中率为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1-p</span><span style=\"box-sizing: border-box;\">，则计算时间可以进一步压缩为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">p</span><span style=\"box-sizing: border-box;\">倍</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><img alt=\"1d440873ef3d3537da3a1da9434c9ac562e75dd3 语音识别之语言模型技术 AI教程 第22张\" title=\" 语音识别之语言模型技术 AI教程 第22张\" src=\"https://yqfile.alicdn.com/1d440873ef3d3537da3a1da9434c9ac562e75dd3.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">我们的目标是计算一个词序列的概率，其实对于每个输入词，我只需要计算它后面一个词的输出概率，而不是全词典的输出概率。但</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">softmax</span><span style=\"box-sizing: border-box;\">函数，需要计算分母，用于归一化整个概率和为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1</span><span style=\"box-sizing: border-box;\">，所有节点的值都需要被计算一遍。对于较大的词典，也就是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">V</span><span style=\"box-sizing: border-box;\">较大的时候，比如</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">100w</span><span style=\"box-sizing: border-box;\">，计算量还是很大的。这里我们把分母的求和看做一个整体</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Zc</span><span style=\"box-sizing: border-box;\">，我们想要是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Zc</span><span style=\"box-sizing: border-box;\">是个常数就好了。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">本文引入了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Noise Contrastive Estimation</span><span style=\"box-sizing: border-box;\">，噪声对比估计，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NCE</span><span style=\"box-sizing: border-box;\">的训练准则，通过对噪声（负样本）进行采样，把一个多类分类问题，转化成每个类别的二类分类问题。一方面训练的时候不需要计算全部输出，只需要计算采样的噪声和目标节点，节省训练开销；一方面测试的时候，分母</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Zc</span><span style=\"box-sizing: border-box;\">可以趋近于一个常数，从而只需要计算目标节点的输出，节省测试开销。</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">于是通过</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NCE</span><span style=\"box-sizing: border-box;\">训练，输出层计算量也压缩到只有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">H</span><span style=\"box-sizing: border-box;\">量级了。系统中每个步骤的计算，都如下表压缩到一个很低的量级。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"62bf278d35b19a3a9462a86fa5afbfd3f4e01926 语音识别之语言模型技术 AI教程 第23张\" title=\" 语音识别之语言模型技术 AI教程 第23张\" src=\"https://yqfile.alicdn.com/62bf278d35b19a3a9462a86fa5afbfd3f4e01926.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">下面是实验结果。这里用的数据集跟之前比较相似，用了</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">switchboard</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">broadcast news</span><span style=\"box-sizing: border-box;\">两个测试集，分别记作</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">swb</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">bn</span><span style=\"box-sizing: border-box;\">。首先看看识别率。对于上表，用的是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">6-</span><span style=\"box-sizing: border-box;\">元文法模型，识别率分别从</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">7.0</span><span style=\"box-sizing: border-box;\">降到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">6.6</span><span style=\"box-sizing: border-box;\">，以及</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">10.9</span><span style=\"box-sizing: border-box;\">降到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">10.0</span><span style=\"box-sizing: border-box;\">，降幅都是很乐观的，识别率性能有保证。对于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">ModelM</span><span style=\"box-sizing: border-box;\">，提升小一些，但也相对比较稳定。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"a287366571a8f6d46382533fec4cd1adcc3c3b3c 语音识别之语言模型技术 AI教程 第24张\" title=\" 语音识别之语言模型技术 AI教程 第24张\" src=\"https://yqfile.alicdn.com/a287366571a8f6d46382533fec4cd1adcc3c3b3c.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"c45b5133bd712a8a37acd952121f1f15b911dfc8 语音识别之语言模型技术 AI教程 第25张\" title=\" 语音识别之语言模型技术 AI教程 第25张\" src=\"https://yqfile.alicdn.com/c45b5133bd712a8a37acd952121f1f15b911dfc8.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">性能问题不大，这篇文章主要看速度。首先是表</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">4</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">precompute</span><span style=\"box-sizing: border-box;\">策略和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">cache</span><span style=\"box-sizing: border-box;\">策略，分别加速</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">50</span><span style=\"box-sizing: border-box;\">倍和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">15-50</span><span style=\"box-sizing: border-box;\">倍。其中</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">Broadcast news</span><span style=\"box-sizing: border-box;\">和</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">switchboard</span><span style=\"box-sizing: border-box;\">用的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">数不一样，所以加速倍数不一样。但总体都有不少于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">100</span><span style=\"box-sizing: border-box;\">倍的提升，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">switchboard</span><span style=\"box-sizing: border-box;\">因为</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">embedding</span><span style=\"box-sizing: border-box;\">数较大，更有</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">225</span><span style=\"box-sizing: border-box;\">倍速的提升。</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"229bb0657ef2dd51099697ce482241e93013edcb 语音识别之语言模型技术 AI教程 第26张\" title=\" 语音识别之语言模型技术 AI教程 第26张\" src=\"https://yqfile.alicdn.com/229bb0657ef2dd51099697ce482241e93013edcb.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><img alt=\"d222ec027351c28c105311ee0d002d57d5862029 语音识别之语言模型技术 AI教程 第27张\" title=\" 语音识别之语言模型技术 AI教程 第27张\" src=\"https://yqfile.alicdn.com/d222ec027351c28c105311ee0d002d57d5862029.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">然后表</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">5</span><span style=\"box-sizing: border-box;\">是激活函数的提升，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">maxout</span><span style=\"box-sizing: border-box;\">在保证性能的前提下提速</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1.9</span><span style=\"box-sizing: border-box;\">倍，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">prelu</span><span style=\"box-sizing: border-box;\">性能稍降，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">6.6</span><span style=\"box-sizing: border-box;\">到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">6.7</span><span style=\"box-sizing: border-box;\">，但提速</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">3.6</span><span style=\"box-sizing: border-box;\">倍，届时需要</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">tradeoff</span><span style=\"box-sizing: border-box;\">一下；</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"14ab6c2b9669e9a11a65af0fc058dabd818a2085 语音识别之语言模型技术 AI教程 第28张\" title=\" 语音识别之语言模型技术 AI教程 第28张\" src=\"https://yqfile.alicdn.com/14ab6c2b9669e9a11a65af0fc058dabd818a2085.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">表</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">6</span><span style=\"box-sizing: border-box;\">是</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">cache</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">memory</span><span style=\"box-sizing: border-box;\">消耗，显然这里对</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">cache</span><span style=\"box-sizing: border-box;\">的消耗还是大幅提升的，这里</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">cache</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">size</span><span style=\"box-sizing: border-box;\">和命中率也是需要</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">tradeoff</span><span style=\"box-sizing: border-box;\">一下；</span></p><p align=\"center\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; text-align: center; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\"><img alt=\"c12c86a26f283057b05304c758be03db2d230728 语音识别之语言模型技术 AI教程 第29张\" title=\" 语音识别之语言模型技术 AI教程 第29张\" src=\"https://yqfile.alicdn.com/c12c86a26f283057b05304c758be03db2d230728.png\" width=\"300\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; cursor: pointer;\"/><br style=\"box-sizing: border-box;\"/></span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 0px; color: rgb(51, 51, 51); font-family: PingFangSC, &#39;helvetica neue&#39;, &#39;hiragino sans gb&#39;, arial, &#39;microsoft yahei ui&#39;, &#39;microsoft yahei&#39;, simsun, sans-serif; font-size: 16px; line-height: 32px; background: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box;\">最后表</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">7</span><span style=\"box-sizing: border-box;\">是整体的提升，将</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">5.62</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">RTF</span><span style=\"box-sizing: border-box;\">，</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">real time factor</span><span style=\"box-sizing: border-box;\">，实时率，整体优化到</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1.04</span><span style=\"box-sizing: border-box;\">，趋近</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">ngram</span><span style=\"box-sizing: border-box;\">的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1.01</span><span style=\"box-sizing: border-box;\">。实际系统中</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">ngram</span><span style=\"box-sizing: border-box;\">模型的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">rtf</span><span style=\"box-sizing: border-box;\">还可以继续优化到远小于</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">1</span><span style=\"box-sizing: border-box;\">，对应的</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">NNLM</span><span style=\"box-sizing: border-box;\">也是可以提供</span><span style=\"box-sizing: border-box; font-family: Arial, sans-serif;\">one-pass</span><span style=\"box-sizing: border-box;\">实时识别服务的。</span></p><!--页面关键词匹配耗时0.00052905082702637秒--> </div> </div> <!--文章来源--> <div class=\"post-copyright hidden-xs\"> <div class=\"media\"> <div class=\"media-left\"><img src=\"http://www.52ai.com/zb_users/theme/ZCMS/style/public.jpg\" alt=\"二维码\">";
            // 标题
            $patt = "/<h1 class=\"post-title text-center\">(.*)<\/h1> <div/Us";
            // 作者
            $patt = "/rel=\"author\">(.*)<\/a><em>/Us";
            // 时间
            $patt = "/iconfont icon-time\"><\/i>(.*)<em>/Us";
//            内容
            $patt = "/<div class=\"post-summary hidden-xs\"><span class=\"text-danger\">(.*)<div class=\"post-copyright hidden-xs\">/Us";
            // tupian
            $patt = "/rgb\(255, 255, 255\);\"><img alt=\".*\" title=\".*\" src=\"(.*)\"/Us";
            $num = preg_match($patt,$str,$result);
            var_dump($num,$result);
            // $arr = "/<h1 class=\"post-title text-center\">(.*)<\/h1> <div/Us||/rel=\"author\">(.*)<\/a><em>/Us||/iconfont icon-time\"><\/i>(.*)<em>/Us||/<span class=\"text - danger\">摘要：(.*)<\/span><span style=\"box - sizing: border - box;\">/Us||";
    }
//<span style=\"box-sizing: border-box;\">.*<\/span><\/p><!--页面关键词匹配耗时0.00053310394287109秒--> <\/div> <\/div>




}


//$arr = "=/\"wznr\">.*<h2>(.*)</h2>/Us||/<em>(.*)<\/em><\/dt>/Us||/<div class=\"zwnr\">(.*)<dt><em>分享:</em>/Us||/ <dt><span>作者：(.*)</span><span>来源/Us||/target=\"_blank\"><img src=\"(.*)\" width=\"auto\" border=\"0\" height=\"auto\" alt=\"\" title=\"\" \/><\/a><\/p>/Us||"
?>